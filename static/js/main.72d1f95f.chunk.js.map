{"version":3,"sources":["logo.svg","DadJokes.js","Bikes.js","App.js","reportWebVitals.js","index.js"],"names":["DadJokes","useState","joke","setJoke","useEffect","fetch","then","response","json","data","children","console","log","className","title","selftext","service","createEnturService","clientName","Bikes","bikeStations","setBikeStations","getBikeRentalStationsByPosition","latitude","longitude","map","stationData","Station","name","props","bikesAvailable","spacesAvailable","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,G,MAAA,IAA0B,kC,uBCiC1BA,MA/Bf,WAAqB,IAAD,EAEOC,mBAAS,IAFhB,mBAEVC,EAFU,KAEJC,EAFI,KAsBhB,OARAC,qBAAU,WAPNC,MACI,4DACFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUL,EAAQK,EAAKC,KAAKC,SAAS,GAAGD,WAMhD,IAEHL,qBAAU,WACNO,QAAQC,IAAIV,KACb,CAACA,IAGA,sBAAKW,UAAU,OAAf,UACI,0CACA,4BAAIX,EAAKY,QACT,4BAAIZ,EAAKa,e,QCzBfC,E,MAAUC,GAAmB,CAC/BC,WAAY,uBAqBDC,MAlBf,WAAkB,IAAD,EAC2BlB,mBAAS,IADpC,mBACNmB,EADM,KACQC,EADR,KAUb,OAPAjB,qBAAU,WACNY,EAAQM,gCACJ,CAACC,SAAU,UAAWC,UAAW,WACjC,KACFlB,MAAK,SAACG,GAAD,OAAUY,EAAgBZ,QAClC,IAEK,sBAAKI,UAAU,OAAf,UACJ,4CACCO,EAAaK,KAAI,SAACC,GAAD,OAClB,cAACC,EAAD,CAAgClB,KAAMiB,GAAxBA,EAAYE,aAOlC,SAASD,EAAQE,GAAQ,IACbpB,EAASoB,EAATpB,KACR,OAAO,sBAAKI,UAAU,UAAf,UACFJ,EAAKmB,KADH,KACWnB,EAAKqB,eADhB,MACmCrB,EAAKsB,gBADxC,OCZIC,MAZf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKoB,IAAKC,EAAMrB,UAAU,WAAWsB,IAAI,SACzC,cAAC,EAAD,IACA,cAAC,EAAD,UCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72d1f95f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DadJokes() {\r\n    \r\n    const[joke, setJoke] = useState({});\r\n\r\n    function getJoke() {\r\n        \r\n\r\n        fetch(\r\n            \"https://www.reddit.com/r/dadjokes/top.json?t=day&limit=1\"\r\n        ).then((response) => response.json()\r\n        ).then((json) => setJoke(json.data.children[0].data));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getJoke();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(joke)\r\n    }, [joke]);\r\n\r\n    return (\r\n        <div className=\"joke\">\r\n            <h2>Dad Joke</h2>\r\n            <p>{joke.title}</p>\r\n            <p>{joke.selftext}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DadJokes;","import React, { useEffect, useState } from \"react\";\r\nimport createEnturService from '@entur/sdk';\r\n\r\nconst service = createEnturService({\r\n    clientName: 'Nicolai-Infoscreen'\r\n})\r\n\r\nfunction Bikes() {\r\n    const [bikeStations, setBikeStations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        service.getBikeRentalStationsByPosition(\r\n            {latitude: 63.428211, longitude: 10.392514},\r\n            230\r\n        ).then((data) => setBikeStations(data));\r\n    }, [])\r\n\r\n    return (<div className=\"bike\">\r\n        <h2>City Bikes</h2>\r\n        {bikeStations.map((stationData) => (\r\n        <Station key={stationData.name} data={stationData} />\r\n        ))}\r\n    </div>)\r\n}\r\n\r\nexport default Bikes;\r\n\r\nfunction Station(props) {\r\n    const { data } = props;\r\n    return <div className=\"station\">\r\n        {data.name}: {data.bikesAvailable} - {data.spacesAvailable};\r\n        </div>;\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport DadJokes from \"./DadJokes\";\nimport Bikes from \"./Bikes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <DadJokes />\n        <Bikes />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}